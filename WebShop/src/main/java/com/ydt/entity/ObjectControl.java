package com.ydt.entity;
// Generated Dec 5, 2018 2:49:26 PM by Hibernate Tools 5.0.6.Final

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.Proxy;
import org.springframework.context.annotation.Lazy;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * ObjectControl generated by hbm2java
 */
@Entity
@Table(name = "object_control", catalog = "webshop1")
@Proxy(lazy = false)
public class ObjectControl implements java.io.Serializable {

	private int objectControlId;
	private String name;
	private ObjectsScreen objectsScreen;
	@JsonIgnore
	private Set<ObjectControlUser> objectControlUsers = new HashSet<ObjectControlUser>(0);
	@JsonIgnore
	private Set<RoleObjectControl> roleObjectControls = new HashSet<RoleObjectControl>(0);

	public ObjectControl() {
	}

	public ObjectControl(int objectControlId) {
		this.objectControlId = objectControlId;
	}

	public ObjectControl(int objectControlId, ObjectsScreen objectsScreen, Set<ObjectControlUser> objectControlUsers,
			Set<RoleObjectControl> roleObjectControls) {
		this.objectControlId = objectControlId;
		this.objectsScreen = objectsScreen;
		this.objectControlUsers = objectControlUsers;
		this.roleObjectControls = roleObjectControls;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "object_control_id", unique = true, nullable = false)
	public int getObjectControlId() {
		return this.objectControlId;
	}

	public void setObjectControlId(int objectControlId) {
		this.objectControlId = objectControlId;
	}

	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "object_id")
	public ObjectsScreen getObjectsScreen() {
		return this.objectsScreen;
	}

	public void setObjectsScreen(ObjectsScreen objectsScreen) {
		this.objectsScreen = objectsScreen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectControl")
	public Set<ObjectControlUser> getObjectControlUsers() {
		return this.objectControlUsers;
	}

	public void setObjectControlUsers(Set<ObjectControlUser> objectControlUsers) {
		this.objectControlUsers = objectControlUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectControl")
	public Set<RoleObjectControl> getRoleObjectControls() {
		return this.roleObjectControls;
	}

	public void setRoleObjectControls(Set<RoleObjectControl> roleObjectControls) {
		this.roleObjectControls = roleObjectControls;
	}

}
