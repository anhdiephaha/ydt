package com.ydt.entity;
// Generated Dec 5, 2018 2:49:26 PM by Hibernate Tools 5.0.6.Final

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.Proxy;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * Roles generated by hbm2java
 */
@Entity
@Table(name = "roles", catalog = "webshop1")
@Proxy(lazy = false)
public class Roles implements java.io.Serializable {

    private int roleId;
    private String roleName;
    @JsonIgnore
    private Set<RoleObjectControl> roleObjectControls = new HashSet<RoleObjectControl>(0);
    @JsonIgnore
    private Set<RoleObject> roleObjects = new HashSet<RoleObject>(0);
    @JsonIgnore
    private Set<RoleUser> roleUsers = new HashSet<RoleUser>(0);

    public Roles() {
    }

    public Roles(int roleId) {
        this.roleId = roleId;
    }

    public Roles(int roleId, String roleName, Set<RoleObjectControl> roleObjectControls, Set<RoleObject> roleObjects,
                 Set<RoleUser> roleUsers) {
        this.roleId = roleId;
        this.roleName = roleName;
        this.roleObjectControls = roleObjectControls;
        this.roleObjects = roleObjects;
        this.roleUsers = roleUsers;
    }
    public Roles(int roleId, String roleName){
        this.roleId = roleId;
        this.roleName = roleName;
    }
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "role_id", unique = true, nullable = false)
    public int getRoleId() {
        return this.roleId;
    }

    public void setRoleId(int roleId) {
        this.roleId = roleId;
    }

    @Column(name = "role_name", length = 200)
    public String getRoleName() {
        return this.roleName;
    }

    public void setRoleName(String roleName) {
        this.roleName = roleName;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "roles")
    public Set<RoleObjectControl> getRoleObjectControls() {
        return this.roleObjectControls;
    }

    public void setRoleObjectControls(Set<RoleObjectControl> roleObjectControls) {
        this.roleObjectControls = roleObjectControls;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "roles")
    public Set<RoleObject> getRoleObjects() {
        return this.roleObjects;
    }

    public void setRoleObjects(Set<RoleObject> roleObjects) {
        this.roleObjects = roleObjects;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "roles")
    public Set<RoleUser> getRoleUsers() {
        return this.roleUsers;
    }

    public void setRoleUsers(Set<RoleUser> roleUsers) {
        this.roleUsers = roleUsers;
    }

}
